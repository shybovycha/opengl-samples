#include "Skybox.hpp"

AbstractSkyboxBuilder* AbstractSkyboxBuilder::size(float size)
{
    m_size = size;
    return this;
}

std::unique_ptr<Skybox> AbstractSkyboxBuilder::build()
{
    std::vector<glm::vec3> vertices {
        { -1.0f, 1.0f, 1.0f },
        { -1.0f, -1.0f, 1.0f },
        { 1.0f, -1.0f, 1.0f },
        { 1.0f, 1.0f, 1.0f },
        { -1.0f, 1.0f, 1.0f },
        { -1.0f, -1.0f, 1.0f },
        { -1.0f, -1.0f, -1.0f },
        { -1.0f, 1.0f, -1.0f },
        { 1.0f, 1.0f, 1.0f },
        { 1.0f, -1.0f, 1.0f },
        { 1.0f, -1.0f, -1.0f },
        { 1.0f, 1.0f, -1.0f },
        { -1.0f, 1.0f, -1.0f },
        { -1.0f, -1.0f, -1.0f },
        { 1.0f, -1.0f, -1.0f },
        { 1.0f, 1.0f, -1.0f },
        { -1.0f, 1.0f, -1.0f },
        { -1.0f, 1.0f, 1.0f },
        { 1.0f, 1.0f, 1.0f },
        { 1.0f, 1.0f, -1.0f },
        { -1.0f, -1.0f, -1.0f },
        { -1.0f, -1.0f, 1.0f },
        { 1.0f, -1.0f, 1.0f },
        { 1.0f, -1.0f, -1.0f },
    };

    std::vector<glm::vec3> normals {
        { 0.0f, 1.0f, 0.0f },
        { 0.0f, 1.0f, 0.0f },
        { 0.0f, 1.0f, 0.0f },

        { 0.0f, -1.0f, 0.0f },
        { 0.0f, -1.0f, 0.0f },
        { 0.0f, -1.0f, 0.0f },

        { -1.0f, 0.0f, 0.0f },
        { -1.0f, 0.0f, 0.0f },
        { -1.0f, 0.0f, 0.0f },

        { 0.0f, 0.0f, -1.0f },
        { 0.0f, 0.0f, -1.0f },
        { 0.0f, 0.0f, -1.0f },

        { 1.0f, 0.0f, 0.0f },
        { 1.0f, 0.0f, 0.0f },
        { 1.0f, 0.0f, 0.0f },

        { 0.0f, 0.0f, 1.0f },
        { 0.0f, 0.0f, 1.0f },
        { 0.0f, 0.0f, 1.0f },

        { 0.0f, 1.0f, 0.0f },
        { 0.0f, 1.0f, 0.0f },
        { 0.0f, 1.0f, 0.0f },

        { 0.0f, -1.0f, 0.0f },
        { 0.0f, -1.0f, 0.0f },
        { 0.0f, -1.0f, 0.0f },

        { -1.0f, 0.0f, 0.0f },
        { -1.0f, 0.0f, 0.0f },
        { -1.0f, 0.0f, 0.0f },

        { 0.0f, 0.0f, -1.0f },
        { 0.0f, 0.0f, -1.0f },
        { 0.0f, 0.0f, -1.0f },

        { 1.0f, 0.0f, 0.0f },
        { 1.0f, 0.0f, 0.0f },
        { 1.0f, 0.0f, 0.0f },

        { 0.0f, 0.0f, 1.0f },
        { 0.0f, 0.0f, 1.0f },
        { 0.0f, 0.0f, 1.0f },
    };

    std::for_each(vertices.begin(), vertices.end(), [this](glm::vec3 p) { return p * m_size; });

    std::vector<unsigned int> indices {
        2,
        1,
        0,

        2,
        0,
        3,

        4,
        5,
        6,

        7,
        4,
        6,

        10,
        9,
        8,

        10,
        8,
        11,

        12,
        13,
        14,

        15,
        12,
        14,

        18,
        17,
        16,

        18,
        16,
        19,

        20,
        21,
        22,

        23,
        20,
        22,
    };

    std::vector<glm::vec2> uvs {
        { 0.333333f, 0.500000f },
        { 0.333333f, 0.000000f },
        { 0.000000f, 0.000000f },
        { 0.000000f, 0.500000f },
        { 0.000000f, 1.000000f },
        { 0.000000f, 0.500000f },
        { 0.333333f, 0.500000f },
        { 0.333333f, 1.000000f },
        { 1.000000f, 1.000000f },
        { 1.000000f, 0.500000f },
        { 0.666666f, 0.500000f },
        { 0.666666f, 1.000000f },
        { 0.333333f, 1.000000f },
        { 0.333333f, 0.500000f },
        { 0.666666f, 0.500000f },
        { 0.666666f, 1.000000f },
        { 0.340000f, 0.500000f },
        { 0.666666f, 0.500000f },
        { 0.666666f, 0.000000f },
        { 0.340000f, 0.000000f },
        { 0.666666f, 0.500000f },
        { 0.666666f, 0.000000f },
        { 1.000000f, 0.000000f },
        { 1.000000f, 0.500000f },
    };

    auto mesh = StaticMesh::builder()
                    ->addVertices(vertices)
                    ->addIndices(indices)
                    ->addNormals(normals)
                    ->addUVs(uvs)
                    ->addTexture(getTexture())
                    ->build();

    return std::make_unique<Skybox>(std::move(mesh));
}
